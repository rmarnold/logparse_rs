name: CI

on:
  push:
    branches: [ main, chore/**, fix/** ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Rustfmt check (non-blocking)
        run: cargo fmt --all -- --check
        continue-on-error: true
      - name: Clippy (non-blocking warnings)
        run: cargo clippy --all-targets --all-features
      - name: Build
        run: cargo build --workspace --all-features --verbose
      - name: Test
        run: cargo test --workspace --all-features --verbose

  python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bindings/python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel
      - name: Lint (ruff)
        run: |
          pip install ruff
          ruff check .
      - name: Type-check (pyright)
        run: |
          pip install pyright
          pyright

  deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Run cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v2

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - name: Generate coverage report
        run: |
          cargo llvm-cov --workspace --all-features --lcov --output-path lcov.info
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

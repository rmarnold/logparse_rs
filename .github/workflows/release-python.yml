name: Release Python package (wheels) to GitHub

on:
  push:
    tags:
      - "v*"
      - "py/v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build wheels (${{ matrix.os }} py${{ matrix.python }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Build wheels with maturin
        uses: PyO3/maturin-action@v1
        with:
          command: build
          manylinux: auto
          args: --release --interpreter python --out dist
          working-directory: bindings/python

      - name: Build source distribution (sdist)
        if: matrix.os == 'ubuntu-latest' && matrix.python == '3.12'
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: bindings/python

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python }}
          path: bindings/python/dist/*

  release:
    name: Create GitHub Release and upload wheels
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
